<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConfirmarSenhaObrigatoria" xml:space="preserve">
    <value>A confirmação de senha é obrigatória.</value>
  </data>
  <data name="DDDObrigatorio" xml:space="preserve">
    <value>DDD é obrigatório.</value>
  </data>
  <data name="DDDTamanhoInvalido" xml:space="preserve">
    <value>DDD em tamanho incorreto.</value>
  </data>
  <data name="EmailInvalido" xml:space="preserve">
    <value>E-mail em formato inválido.</value>
  </data>
  <data name="EmailJaExiste" xml:space="preserve">
    <value>E-mail já existente.</value>
  </data>
  <data name="EmailObrigatorio" xml:space="preserve">
    <value>O e-mail é obrigatório.</value>
  </data>
  <data name="EmailTamanhoIncorreto" xml:space="preserve">
    <value>E-mail em tamanho incorreto.</value>
  </data>
  <data name="NomeObrigatorio" xml:space="preserve">
    <value>O nome é obrigatório.</value>
  </data>
  <data name="NumeroObrigatorio" xml:space="preserve">
    <value>Número é obrigatório.</value>
  </data>
  <data name="NumeroTamanhoInvalido" xml:space="preserve">
    <value>Número em tamanho incorreto.</value>
  </data>
  <data name="SenhaObrigatoria" xml:space="preserve">
    <value>A senha é obrigatória.</value>
  </data>
  <data name="SenhasIguais" xml:space="preserve">
    <value>As senhas são iguais.</value>
  </data>
  <data name="SenhaTamanhoInvalido" xml:space="preserve">
    <value>O tamanho da senha não corresponde.</value>
  </data>
  <data name="SomenteNumero" xml:space="preserve">
    <value>Somente números.</value>
  </data>
  <data name="UsuarioObrigatorio" xml:space="preserve">
    <value>O usuário é obrigatório.</value>
  </data>
  <data name="UsuarioSenhaInvalido" xml:space="preserve">
    <value>Usuário ou senha inválidos.</value>
  </data>
  <data name="TituloTipoDeServicoObrigatorio" xml:space="preserve">
    <value>O titulo do Tipo de Serviço é obrigatório.</value>
  </data>
  <data name="DescricaoTipoDeServicoTamanhoInvalido" xml:space="preserve">
    <value>A descrição do Tipo de Serviço em tamanho incorreto.</value>
  </data>
  <data name="BairroObrigatorio" xml:space="preserve">
    <value>Bairro é obrigatório.</value>
  </data>
  <data name="CampoComMaximoDeCaracteresPermitidoVM" xml:space="preserve">
    <value>Campo deve conter no máximo {1} caracteres.</value>
  </data>
  <data name="CampoComMinimoDeCaracteresPermitidoVM" xml:space="preserve">
    <value>Campo deve conter no mínimo {1} caracteres.</value>
  </data>
  <data name="CampoObrigatorio" xml:space="preserve">
    <value>Campo é obrigatório.</value>
  </data>
  <data name="CEPInvalido" xml:space="preserve">
    <value>CEP é inválido.</value>
  </data>
  <data name="CepObrigatorio" xml:space="preserve">
    <value>CEP é obrigatório.</value>
  </data>
  <data name="CepTamanhoInvalido" xml:space="preserve">
    <value>CEP em tamanho incorreto.</value>
  </data>
  <data name="CidadeObrigatorio" xml:space="preserve">
    <value>Cidade é obrigatório.</value>
  </data>
  <data name="CPFInvalido" xml:space="preserve">
    <value>CPF inválido.</value>
  </data>
  <data name="CPFJaExiste" xml:space="preserve">
    <value>CPF já cadastrado para outra pessoa.</value>
  </data>
  <data name="CPFObrigatorio" xml:space="preserve">
    <value>O CPF é obrigatório.</value>
  </data>
  <data name="CPFTamanhoInvalido" xml:space="preserve">
    <value>CPF em tamanho incorreto.</value>
  </data>
  <data name="DataDeNascimentoInvalido" xml:space="preserve">
    <value>Data de nascimento inválido.</value>
  </data>
  <data name="DataDeNascimentoObrigatorio" xml:space="preserve">
    <value>Data de nascimento é obrigatório.</value>
  </data>
  <data name="EnderecoObrigatorio" xml:space="preserve">
    <value>Endereço é obrigatório.</value>
  </data>
  <data name="EstadoInvalido" xml:space="preserve">
    <value>Estado é inválido.</value>
  </data>
  <data name="FuncionarioObrigatorio" xml:space="preserve">
    <value>O funcionário é obrigatório.</value>
  </data>
  <data name="LogradouroObrigatorio" xml:space="preserve">
    <value>Logradouro é obrigatório.</value>
  </data>
  <data name="NomeObrigatorio1" xml:space="preserve">
    <value>O nome é obrigatório.</value>
  </data>
  <data name="NomeTamanhoInvalido" xml:space="preserve">
    <value>Nome em tamanho incorreto.</value>
  </data>
  <data name="NumeroObrigatorio1" xml:space="preserve">
    <value>Número é obrigatório.</value>
  </data>
  <data name="TelefoneInvalido" xml:space="preserve">
    <value>Telefone inválido.</value>
  </data>
  <data name="TelefoneObrigatorio" xml:space="preserve">
    <value>O telefone é obrigatório.</value>
  </data>
  <data name="TelefoneTamanhoIncorreto" xml:space="preserve">
    <value>Telefone em tamanho incorreto.</value>
  </data>
  <data name="DataDeAgendamentoInvalido" xml:space="preserve">
    <value>A data de agendamento é inválida.</value>
  </data>
  <data name="ClienteInvalido" xml:space="preserve">
    <value>O cliente é inválido.</value>
  </data>
  <data name="FuncionarioInvalido" xml:space="preserve">
    <value>O funcionário é inválido.</value>
  </data>
  <data name="TipoDoServicoInvalido" xml:space="preserve">
    <value>O tipo de serviço é inválido.</value>
  </data>
  <data name="TituloTipoDeServicoTamanhoIncorreto" xml:space="preserve">
    <value>O título do Tipo de Serviço em tamanho incorreto.</value>
  </data>
  <data name="FuncaoObrigatorio" xml:space="preserve">
    <value>Função é obrigatório.</value>
  </data>
  <data name="FuncaoTamanhoInvalido" xml:space="preserve">
    <value>Função tem tamanho incorreto.</value>
  </data>
  <data name="CNPJInvalido" xml:space="preserve">
    <value>CNPJ inválido.</value>
  </data>
  <data name="CNPJJaExiste" xml:space="preserve">
    <value>CNPJ já cadastrado para outra empresa.</value>
  </data>
  <data name="CNPJObrigatorio" xml:space="preserve">
    <value>O CNPJ é obrigatório.</value>
  </data>
  <data name="CNPJTamanhoInvalido" xml:space="preserve">
    <value>CNPJ em tamanho incorreto.</value>
  </data>
  <data name="NomeFantasiaObrigatorio" xml:space="preserve">
    <value>O nome fantasia é obrigatório.</value>
  </data>
  <data name="NomeFantasiaTamanhoInvalido" xml:space="preserve">
    <value>Nome Fantasia está no tamanho incorreto.</value>
  </data>
  <data name="RazaoSocialObrigatorio" xml:space="preserve">
    <value>A razão social é obrigatória.</value>
  </data>
  <data name="RazaoSocialTamanhoInvalido" xml:space="preserve">
    <value>Razão Social está no tamanho incorreto.</value>
  </data>
  <data name="DescricaoEstabelecimentoTamanhoInvalido" xml:space="preserve">
    <value>A descrição do Estabelecimento tem tamanho incorreto.</value>
  </data>
  <data name="DescricaoObrigatorio" xml:space="preserve">
    <value>A descrição é obrigatória.</value>
  </data>
  <data name="LogoObrigatorio" xml:space="preserve">
    <value>O logo é obrigatório.</value>
  </data>
  <data name="EstabelecimentoObrigatorio" xml:space="preserve">
    <value>O estabelecimento é obrigatório.</value>
  </data>
  <data name="AgendamentoJaExiste" xml:space="preserve">
    <value>Este horario já se encontra preenchido para este Funcionário.</value>
  </data>
</root>